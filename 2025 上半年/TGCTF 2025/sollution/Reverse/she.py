# Visit https://www.lddgo.net/string/pyc-compile-decompile for more information
# Version : Python 3.8

from collections import Counter


# 111111116257645365477364777645752361


from sympy import symbols, Eq, solve

(
    x_0,
    x_1,
    x_2,
    x_3,
    x_4,
    x_5,
    x_6,
    x_7,
    x_8,
    x_9,
    x_10,
    x_11,
    x_12,
    x_13,
    x_14,
    x_15,
    x_16,
    x_17,
    x_18,
    x_19,
    x_20,
    x_21,
    x_22,
    x_23,
    x_24,
    x_25,
    x_26,
    x_27,
    x_28,
    x_29,
) = symbols("x_0:30")

equations = [
    Eq(7 * x_0, 504),
    Eq(9 * x_0 - 5 * x_1, 403),
    Eq(2 * x_0 - 5 * x_1 + 10 * x_2, 799),
    Eq(3 * x_0 + 8 * x_1 + 15 * x_2 + 20 * x_3, 2938),
    Eq(5 * x_0 + 15 * x_1 + 20 * x_2 - 19 * x_3 + 1 * x_4, 2042),
    Eq(7 * x_0 + 1 * x_1 + 9 * x_2 - 11 * x_3 + 2 * x_4 + 5 * x_5, 1225),
    Eq(
        11 * x_0 + 22 * x_1 + 33 * x_2 + 44 * x_3 + 55 * x_4 + 66 * x_5 - 77 * x_6, 7975
    ),
    Eq(
        21 * x_0
        + 23 * x_1
        + 3 * x_2
        + 24 * x_3
        - 55 * x_4
        + 6 * x_5
        - 7 * x_6
        + 15 * x_7,
        229,
    ),
    Eq(
        2 * x_0
        + 26 * x_1
        + 13 * x_2
        + 0 * x_3
        - 65 * x_4
        + 15 * x_5
        + 29 * x_6
        + 1 * x_7
        + 20 * x_8,
        2107,
    ),
    Eq(
        10 * x_0
        + 7 * x_1
        + -9 * x_2
        + 6 * x_3
        + 7 * x_4
        + 1 * x_5
        + 22 * x_6
        + 21 * x_7
        - 22 * x_8
        + 30 * x_9,
        4037,
    ),
    Eq(
        15 * x_0
        + 59 * x_1
        + 56 * x_2
        + 66 * x_3
        + 7 * x_4
        + 1 * x_5
        - 122 * x_6
        + 21 * x_7
        + 32 * x_8
        + 3 * x_9
        - 10 * x_10,
        4950,
    ),
    Eq(
        13 * x_0
        + 66 * x_1
        + 29 * x_2
        + 39 * x_3
        - 33 * x_4
        + 13 * x_5
        - 2 * x_6
        + 42 * x_7
        + 62 * x_8
        + 1 * x_9
        - 10 * x_10
        + 11 * x_11,
        12544,
    ),
    Eq(
        23 * x_0
        + 6 * x_1
        + 29 * x_2
        + 3 * x_3
        - 3 * x_4
        + 63 * x_5
        - 25 * x_6
        + 2 * x_7
        + 32 * x_8
        + 1 * x_9
        - 10 * x_10
        + 11 * x_11
        - 12 * x_12,
        6585,
    ),
    Eq(
        223 * x_0
        + 6 * x_1
        - 29 * x_2
        - 53 * x_3
        - 3 * x_4
        + 3 * x_5
        - 65 * x_6
        + 0 * x_7
        + 36 * x_8
        + 1 * x_9
        - 15 * x_10
        + 16 * x_11
        - 18 * x_12
        + 13 * x_13,
        6893,
    ),
    Eq(
        29 * x_0
        + 13 * x_1
        - 9 * x_2
        - 93 * x_3
        + 33 * x_4
        + 6 * x_5
        + 65 * x_6
        + 1 * x_7
        - 36 * x_8
        + 0 * x_9
        - 16 * x_10
        + 96 * x_11
        - 68 * x_12
        + 33 * x_13
        - 14 * x_14,
        1883,
    ),
    Eq(
        69 * x_0
        + 77 * x_1
        - 93 * x_2
        - 12 * x_3
        + 0 * x_4
        + 0 * x_5
        + 1 * x_6
        + 16 * x_7
        + 36 * x_8
        + 6 * x_9
        + 19 * x_10
        + 66 * x_11
        - 8 * x_12
        + 38 * x_13
        - 16 * x_14
        + 15 * x_15,
        8257,
    ),
    Eq(
        23 * x_0
        + 2 * x_1
        - 3 * x_2
        - 11 * x_3
        + 12 * x_4
        + 24 * x_5
        + 1 * x_6
        + 6 * x_7
        + 14 * x_8
        - 0 * x_9
        + 1 * x_10
        + 68 * x_11
        - 18 * x_12
        + 68 * x_13
        - 26 * x_14
        + 15 * x_15
        - 16 * x_16,
        5847,
    ),
    Eq(
        24 * x_0
        + 0 * x_1
        - 1 * x_2
        - 15 * x_3
        + 13 * x_4
        + 4 * x_5
        + 16 * x_6
        + 67 * x_7
        + 146 * x_8
        - 50 * x_9
        + 16 * x_10
        + 6 * x_11
        - 1 * x_12
        + 69 * x_13
        - 27 * x_14
        + 45 * x_15
        - 6 * x_16
        + 17 * x_17,
        18257,
    ),
    Eq(
        25 * x_0
        + 26 * x_1
        - 89 * x_2
        + 16 * x_3
        + 19 * x_4
        + 44 * x_5
        + 36 * x_6
        + 66 * x_7
        - 150 * x_8
        - 250 * x_9
        + 166 * x_10
        + 126 * x_11
        - 11 * x_12
        + 690 * x_13
        - 207 * x_14
        + 46 * x_15
        + 6 * x_16
        + 7 * x_17
        - 18 * x_18,
        12591,
    ),
    Eq(
        5 * x_0
        + 26 * x_1
        + 8 * x_2
        + 160 * x_3
        + 9 * x_4
        - 4 * x_5
        + 36 * x_6
        + 6 * x_7
        - 15 * x_8
        - 20 * x_9
        + 66 * x_10
        + 16 * x_11
        - 1 * x_12
        + 690 * x_13
        - 20 * x_14
        + 46 * x_15
        + 6 * x_16
        + 7 * x_17
        - 18 * x_18
        + 19 * x_19,
        52041,
    ),
    Eq(
        29 * x_0
        - 26 * x_1
        + 0 * x_2
        + 60 * x_3
        + 90 * x_4
        - 4 * x_5
        + 6 * x_6
        + 6 * x_7
        - 16 * x_8
        - 21 * x_9
        + 69 * x_10
        + 6 * x_11
        - 12 * x_12
        + 69 * x_13
        - 20 * x_14
        - 46 * x_15
        + 65 * x_16
        + 0 * x_17
        - 1 * x_18
        + 39 * x_19
        - 20 * x_20,
        20253,
    ),
    Eq(
        45 * x_0
        - 56 * x_1
        + 10 * x_2
        + 650 * x_3
        - 900 * x_4
        + 44 * x_5
        + 66 * x_6
        - 6 * x_7
        - 6 * x_8
        - 21 * x_9
        + 9 * x_10
        - 6 * x_11
        - 12 * x_12
        + 69 * x_13
        - 2 * x_14
        - 406 * x_15
        + 651 * x_16
        + 2 * x_17
        - 10 * x_18
        + 69 * x_19
        - 0 * x_20
        + 21 * x_21,
        18768,
    ),
    Eq(
        555 * x_0
        - 6666 * x_1
        + 70 * x_2
        + 510 * x_3
        - 90 * x_4
        + 499 * x_5
        + 66 * x_6
        - 66 * x_7
        - 610 * x_8
        - 221 * x_9
        + 9 * x_10
        - 23 * x_11
        - 102 * x_12
        + 6 * x_13
        + 2050 * x_14
        - 406 * x_15
        + 665 * x_16
        + 333 * x_17
        + 100 * x_18
        + 609 * x_19
        + 777 * x_20
        + 201 * x_21
        - 22 * x_22,
        111844,
    ),
    Eq(
        1 * x_0
        - 22 * x_1
        + 333 * x_2
        + 4444 * x_3
        - 5555 * x_4
        + 6666 * x_5
        - 666 * x_6
        + 676 * x_7
        - 660 * x_8
        - 22 * x_9
        + 9 * x_10
        - 73 * x_11
        - 107 * x_12
        + 6 * x_13
        + 250 * x_14
        - 6 * x_15
        + 65 * x_16
        + 39 * x_17
        + 10 * x_18
        + 69 * x_19
        + 777 * x_20
        + 201 * x_21
        - 2 * x_22
        + 23 * x_23,
        159029,
    ),
    Eq(
        520 * x_0
        - 222 * x_1
        + 333 * x_2
        + 4 * x_3
        - 56655 * x_4
        + 6666 * x_5
        + 666 * x_6
        + 66 * x_7
        - 60 * x_8
        - 220 * x_9
        + 99 * x_10
        + 73 * x_11
        + 1007 * x_12
        + 7777 * x_13
        + 2500 * x_14
        + 6666 * x_15
        + 605 * x_16
        + 390 * x_17
        + 100 * x_18
        + 609 * x_19
        + 99999 * x_20
        + 210 * x_21
        + 232 * x_22
        + 23 * x_23
        - 24 * x_24,
        2762025,
    ),
    Eq(
        1323 * x_0
        - 22 * x_1
        + 333 * x_2
        + 4 * x_3
        - 55 * x_4
        + 666 * x_5
        + 666 * x_6
        + 66 * x_7
        - 660 * x_8
        - 220 * x_9
        + 99 * x_10
        + 3 * x_11
        + 100 * x_12
        + 777 * x_13
        + 2500 * x_14
        + 6666 * x_15
        + 605 * x_16
        + 390 * x_17
        + 100 * x_18
        + 609 * x_19
        + 9999 * x_20
        + 210 * x_21
        + 232 * x_22
        + 23 * x_23
        - 24 * x_24
        + 25 * x_25,
        1551621,
    ),
    Eq(
        777 * x_0
        - 22 * x_1
        + 6969 * x_2
        + 4 * x_3
        - 55 * x_4
        + 666 * x_5
        - 6 * x_6
        + 96 * x_7
        - 60 * x_8
        - 220 * x_9
        + 99 * x_10
        + 3 * x_11
        + 100 * x_12
        + 777 * x_13
        + 250 * x_14
        + 666 * x_15
        + 65 * x_16
        + 90 * x_17
        + 100 * x_18
        + 609 * x_19
        + 999 * x_20
        + 21 * x_21
        + 232 * x_22
        + 23 * x_23
        - 24 * x_24
        + 25 * x_25
        - 26 * x_26,
        948348,
    ),
    Eq(
        97 * x_0
        - 22 * x_1
        + 6969 * x_2
        + 4 * x_3
        - 56 * x_4
        + 96 * x_5
        - 6 * x_6
        + 96 * x_7
        - 60 * x_8
        - 20 * x_9
        + 99 * x_10
        + 3 * x_11
        + 10 * x_12
        + 707 * x_13
        + 250 * x_14
        + 666 * x_15
        + -9 * x_16
        + 90 * x_17
        + -2 * x_18
        + 609 * x_19
        + 0 * x_20
        + 21 * x_21
        + 2 * x_22
        + 23 * x_23
        - 24 * x_24
        + 25 * x_25
        - 26 * x_26
        + 27 * x_27,
        777044,
    ),
    Eq(
        177 * x_0
        - 22 * x_1
        + 699 * x_2
        + 64 * x_3
        - 56 * x_4
        - 96 * x_5
        - 66 * x_6
        + 96 * x_7
        - 60 * x_8
        - 20 * x_9
        + 99 * x_10
        + 3 * x_11
        + 10 * x_12
        + 707 * x_13
        + 250 * x_14
        + 666 * x_15
        + -9 * x_16
        + 0 * x_17
        + -2 * x_18
        + 69 * x_19
        + 0 * x_20
        + 21 * x_21
        + 222 * x_22
        + 23 * x_23
        - 224 * x_24
        + 25 * x_25
        - 26 * x_26
        + 27 * x_27
        - 28 * x_28,
        185016,
    ),
    Eq(
        77 * x_0
        - 2 * x_1
        + 6 * x_2
        + 6 * x_3
        - 96 * x_4
        - 9 * x_5
        - 6 * x_6
        + 96 * x_7
        - 0 * x_8
        - 20 * x_9
        + 99 * x_10
        + 3 * x_11
        + 10 * x_12
        + 707 * x_13
        + 250 * x_14
        + 666 * x_15
        + -9 * x_16
        + 0 * x_17
        + -2 * x_18
        + 9 * x_19
        + 0 * x_20
        + 21 * x_21
        + 222 * x_22
        + 23 * x_23
        - 224 * x_24
        + 26 * x_25
        - -58 * x_26
        + 27 * x_27
        - 2 * x_28
        + 29 * x_29,
        130106,
    ),
]


solution = solve(
    equations,
    (
        x_0,
        x_1,
        x_2,
        x_3,
        x_4,
        x_5,
        x_6,
        x_7,
        x_8,
        x_9,
        x_10,
        x_11,
        x_12,
        x_13,
        x_14,
        x_15,
        x_16,
        x_17,
        x_18,
        x_19,
        x_20,
        x_21,
        x_22,
        x_23,
        x_24,
        x_25,
        x_26,
        x_27,
        x_28,
        x_29,
    ),
)

print(solution)
for x, value in solution.items():
    print(f"{x} = {chr(value)}")
    # print(chr(value), end="")

# H1T1F1{1a6d2Z75f7-463}11N1U1C1
# H1 Z1 N1 U1 C1 T1 F1 {1 a6 d2 75 f7 -4 63 }1

# 111111116257645365477364777645752361
# HZNUCTF{ad7fa-76a7-ff6a-fffa-7f7d6a}
