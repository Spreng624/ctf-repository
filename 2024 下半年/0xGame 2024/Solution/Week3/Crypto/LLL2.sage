from Crypto.Util.number import *
from hashlib import md5


def MD5(m):
    return md5(str(m).encode()).hexdigest()

Cs = [
    11804527453299586684489593808016317337345238230165321056832279785591503368758306671170625597063579251464905729051049524014502008954170088604924368057540940, 
    4930922884306486570759661288602557428608315558804950537470100263019228888817481617065454705843164809506859574053884206133344549895853064735361336486560981, 
    5380263856446165449531647111260010594620416730932539097782399557603420658350407080366132490174060420530708293564252852668431923560882648691392446521188465,
    10746696290782998433216934286282230556131938525513632178308443345441147075710552571129957873399395862207656161609046567289600084193860244770966610161184627, 
    2195032957511830992558961021566904850278796737316238566513837995297394215638259916944087623923636789312134734949452839561765171446217520081402769962517110
]
m = 12813864523019740432913161815051292412705285817864701047922722497269479288096574264414061282833203433542813637861620032851255308640850882149603687035724753

# A = Matrix([k1, k2, k3, k4, -a, 1])
# B = Matrix([b1, b2, b3, b4, a*K/m, K])
K = 2**128
M = Matrix([[m, 0, 0, 0, 0, 0],
            [0, m, 0, 0, 0, 0],
            [0, 0, m, 0, 0, 0],
            [0, 0, 0, m, 0, 0],
            [Cs[0], Cs[1], Cs[2], Cs[3], -K/m, 0],
            [Cs[1], Cs[2], Cs[3], Cs[4], 0, K]])
L = M.LLL()
print(L[1,-2] / K * m % m)


K = 2**128
M = Matrix([[m, 0, 0, 0, 0, 0],
            [0, m, 0, 0, 0, 0],
            [0, 0, m, 0, 0, 0],
            [0, 0, 0, m, 0, 0],
            [Cs[0], Cs[1], Cs[2], Cs[3], 1/K, 0],
            [Cs[1], Cs[2], Cs[3], Cs[4], 0, K]])

for line in M.LLL():
    if abs(line[-1])==K:
        a = int(abs(line[-2]*K))
        print(a)
        seed = Cs[0] * inverse_mod(int(a), m) % m
        print(int(seed).bit_length())  # 510
        print("0xGame{" + MD5(seed) + "}")